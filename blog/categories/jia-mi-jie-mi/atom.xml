<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 加密解密 | My Octopress Blog]]></title>
  <link href="http://p1o2p3u1.github.io/blog/categories/jia-mi-jie-mi/atom.xml" rel="self"/>
  <link href="http://p1o2p3u1.github.io/"/>
  <updated>2014-10-08T23:49:21+08:00</updated>
  <id>http://p1o2p3u1.github.io/</id>
  <author>
    <name><![CDATA[wuting@zju.edu.cn]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[RSA加密解密原理]]></title>
    <link href="http://p1o2p3u1.github.io/blog/2014/10/08/rsa-encrypt-and-decrypt-theory/"/>
    <updated>2014-10-08T23:14:29+08:00</updated>
    <id>http://p1o2p3u1.github.io/blog/2014/10/08/rsa-encrypt-and-decrypt-theory</id>
    <content type="html"><![CDATA[<h2 id="section">加密过程</h2>
<p>加密过程可以通过如下公式表示</p>

<script type="math/tex; mode=display">C = M^e \bmod n</script>

<p>$C$：加密后的密文。
$M$：表示要加密的明文数据块。将要加密的明文分成若干个消息块，然后将消息块中的字符转换为数字，这样就得到了一个很大的整数M。
$e$：公钥之一
$n$：公钥之一</p>

<h2 id="section-1">解密过程</h2>
<p>解密过程可以通过如下公式表示</p>

<script type="math/tex; mode=display">M = C^d \bmod n</script>

<p>其中$C$和$M$与上面的定义一致。$d$就是使用者的私钥。</p>

<h2 id="section-2">它是如何工作的？</h2>
<p>举一个简单的例子</p>

<ol>
  <li>首先选择两个素数，比如我们选11和23</li>
  <li>计算他们的乘机，得到$n$。即 $n = 11 * 23 = 253$.</li>
  <li>现在计算私钥$d$，$d$要与$(p-1)(q-1)$互质。这样的数有很多个，这里我们选19，即$d=19$</li>
  <li>公钥$e$可由公式$19e \pmod {220} = 1$计算出。计算得到$e=139$</li>
  <li>这样，我们得到了公钥$(e,n)=(139,253)$ 和私钥 $d=19$</li>
</ol>

<p>现在尝试加密数据“Hi”</p>

<ol>
  <li>查“Hi”的ASCII值，得到明文$(72,105)$</li>
  <li>用公钥对明文进行加密</li>
</ol>

<script type="math/tex; mode=display">72 ^ {139} \pmod {253} = 2 \\\
105 ^ {139} \pmod {253} = 101</script>

<p>得到密文$(2,101)$</p>

<ol>
  <li>使用私钥$d$，将密文还原成明文</li>
</ol>

<script type="math/tex; mode=display">2 ^ {19} \pmod {253} = 72 \\\
 101 ^ {19} \pmod {253} = 105 </script>

<ol>
  <li>将明文转换为对应的ASCII字符，得到“Hi”</li>
</ol>

<h2 id="section-3">工作原理</h2>

<h3 id="section-4">1. 欧拉函数</h3>

<h4 id="section-5">1.1 欧拉函数定义</h4>

<p>欧拉函数$\varphi(n)$是小于或等于n的正整数中与n互质的数的数目。<br />
如小于$5$且与$5$互质的数有$1,2,3,4$，所以$\varphi(5) = 4$。又比如小于$8$且与$8$互质的数有$1,3,5,7$，所以$\varphi(8) = 4$</p>

<h4 id="section-6">1.2 欧拉函数的值</h4>

<ol>
  <li>
    <p>$\varphi(1) = 1$  </p>
  </li>
  <li>
    <p>若$n$是质数$p$的$k$次幂，则$\varphi(n) = p^k - p^{k-1} = (p-1)p^{k-1}$。 <br />
如$\varphi(25) = \varphi(5^2) = 5^2 - 5^1 = 20$</p>
  </li>
  <li>
    <p>若$m,n$互质，则$\varphi(mn) = \varphi(m) * \varphi(n)$。<br />
如<script type="math/tex">\varphi(72) = \varphi(8*9) = \varphi(2^3 * 3^2) = \varphi(2^3) * \varphi(3^2) = (8-4)*(9-3)=24</script></p>
  </li>
</ol>

<h3 id="section-7">2. 欧拉定理</h3>

<p>若$n,a$是正整数，且$n,a$互质，则</p>

<script type="math/tex; mode=display">a ^ {\varphi(n)} \equiv 1 \pmod n</script>

<p>其中$\varphi(n)$欧拉函数。<br />
比如$a=3,n=5$，则$\varphi(5)=4,a^{\varphi(n)} = 3^4 = 81$。<br />
而$81 \equiv 80 + 1 \equiv 1 \pmod{5}$ </p>

<p>欧拉定理可以用来简化幂运算，如计算$7^{222}$的个位数。由于$7$和$10$互素，且$\varphi(10)=4$。由欧拉定理知$7^4\equiv 1\pmod {10}$。所以$7^{222}= 7^{4\cdot 55+2}= (7^4)^{55}\cdot 7^2\equiv 1^{55}\cdot 7^2\equiv 49\equiv 9\pmod{10}$。</p>

<h3 id="rsa">3. RSA模型</h3>

<ol>
  <li>
    <p>首先要选两个很大的素数$p,q$，并计算$n=p*q$作为公钥的一部分，但选择的$p,q$需要保密。</p>
  </li>
  <li>
    <p>此时欧拉函数$\varphi(n) = \varphi(pq)=(p-1)(q-1)$</p>
  </li>
  <li>
    <p>像上面的例子一样，选择一个$d$，保证$ min(p,q)\leq d \leq \varphi(n)$，且$d$与$\varphi(n)$互质。</p>
  </li>
  <li>
    <p>通过$ed \bmod {\varphi(n)} = 1$得到$e$。此时已得到全部公钥$e,n$和私钥$d$，且$ed = 1 + r\varphi(n)$</p>
  </li>
  <li>
    <p>加密过程为$C = M^e \bmod n$，解密过程为$M’ = C^d \bmod n$。等式成立的推导过程为：</p>
  </li>
</ol>

<script type="math/tex; mode=display">M' = C^d \bmod n = (M^e \bmod n)^d \bmod n \\\
 = M^{ed} \bmod n = M^{1 + r\varphi(n)} \bmod n 
 = M * (M^{\varphi(n)})^r \bmod n </script>

<p>由欧拉定理，
$M^{\varphi(n)} \equiv 1 \pmod n$，
所以</p>

<script type="math/tex; mode=display">M * (M^{\varphi(n)})^r \bmod n = M*1^r \bmod n = M \bmod n</script>

<p>此时说明明文$M$经过编码为$C$再经过解码为$M’$时,$M’ = M \bmod n$。但我们在做编码解码时, 限制 $0 \leq M’ &lt; n,0 \leq M &lt; n$，所以编码和解码后的结果是相同的，即$M = M’$。</p>

<p>证毕。</p>
]]></content>
  </entry>
  
</feed>
